{"version":3,"sources":["app/components/Copyright.js","app/components/form/Input.js","app/modules/pages/auth/login/LoginForm/LoginForm.js","app/modules/pages/auth/login/LoginCard.js","app/modules/pages/auth/login/LoginPage.js"],"names":["Copyright","props","Grow","in","timeout","Typography","variant","color","align","Link","href","useStyles","makeStyles","theme","outSidePosition","position","inSidePosition","top","right","getHelperText","touched","errors","Input","field","form","label","type","TextField","margin","fullWidth","error","name","helperText","LoginSchema","Yup","shape","account","required","password","min","max","errorMessage","fontWeight","LoginForm","actionLoading","auth","login","classes","enableReinitialize","initialValues","validationSchema","onSubmit","values","handleSubmit","setFieldValue","className","noValidate","component","id","autoComplete","autoFocus","Grid","container","justifyContent","item","LoadingButton","disableElevation","submit","disabled","sx","mt","mb","loading","loadingPosition","xs","initAuth","undefined","LoginCard","useState","setActionLoading","setErrorMessage","dispatch","useDispatch","Container","maxWidth","CssBaseline","Box","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","action","LoginPage","Helmet"],"mappings":"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","file":"static/js/11.00bab395.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\n\r\nexport function Copyright(props) {\r\n  return (\r\n    <Grow in={true} timeout={1500}>\r\n      <Typography\r\n        variant=\"body2\"\r\n        color=\"text.secondary\"\r\n        align=\"center\"\r\n        {...props}\r\n      >\r\n        {\"Copyright © 2021\"}\r\n        <Link color=\"inherit\" href=\"https://www.aiv.com.tw/\">\r\n          智慧價值\r\n        </Link>\r\n        {\" All Rights Reserved.\"}\r\n      </Typography>\r\n    </Grow>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  outSidePosition: {\r\n    position: \"relative\",\r\n  },\r\n  inSidePosition: {\r\n    position: \"absolute\",\r\n    top: \"-2.48px\",\r\n    right: \"0px\",\r\n  },\r\n}));\r\n\r\nconst getHelperText = (touched, errors) => {\r\n  if (touched && errors) {\r\n    return errors;\r\n  }\r\n};\r\n\r\nexport function Input({\r\n  field, // { name, value, onChange, onBlur }\r\n  form: { touched, errors }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\r\n  label,\r\n  type,\r\n  ...props\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <TextField\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        fullWidth\r\n        label={label}\r\n        type={type}\r\n        error={touched[field.name] && errors[field.name]}\r\n        helperText={getHelperText(touched[field.name], errors[field.name])}\r\n        {...field}\r\n        {...props}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form, Field } from \"formik\";\r\n\r\nimport { Input } from \"../../../../../components/form/Input\";\r\n\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport LoadingButton from \"@material-ui/lab/LoadingButton\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst LoginSchema = Yup.object().shape({\r\n  account: Yup.string().required(\"請輸入帳號\"),\r\n  password: Yup.string()\r\n    .min(6, \"密碼字數不足，最少6個字\")\r\n    .max(20, \"密碼字數過多，最多20個字\")\r\n    .required(\"請輸入密碼\"),\r\n});\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  errorMessage: {\r\n    color: \"#F44336\",\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nexport function LoginForm({ actionLoading, errorMessage, auth, login }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={auth}\r\n        validationSchema={LoginSchema}\r\n        onSubmit={(values) => {\r\n          login(values);\r\n        }}\r\n      >\r\n        {({ handleSubmit, setFieldValue, values }) => (\r\n          <>\r\n            <Form className={classes.form} noValidate>\r\n              <Field\r\n                name=\"account\"\r\n                component={Input}\r\n                label=\"帳號\"\r\n                id=\"account\"\r\n                autoComplete=\"account\"\r\n                autoFocus\r\n                required\r\n              />\r\n              <Field\r\n                name=\"password\"\r\n                component={Input}\r\n                label=\"密碼\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                required\r\n              />\r\n              <Grid container justifyContent=\"center\">\r\n                <Grid item>\r\n                  <Typography className={classes.errorMessage} variant=\"body2\">\r\n                    {errorMessage}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <LoadingButton\r\n                type=\"submit\"\r\n                fullWidth\r\n                disableElevation\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                onSubmit={() => handleSubmit()}\r\n                disabled={actionLoading}\r\n                sx={{ mt: 3, mb: 2 }}\r\n                loading={actionLoading}\r\n                loadingPosition=\"end\"\r\n              >\r\n                登入\r\n              </LoadingButton>\r\n              <Grid container>\r\n                <Grid item xs>\r\n                  <Link href=\"#\" variant=\"body2\">\r\n                    忘記密碼?\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </Form>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport * as action from \"../../../_redux/auth/AuthAction\";\r\nimport { shallowEqual, useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { Copyright } from \"../../../../components/Copyright\";\r\nimport { LoginForm } from \"./LoginForm/LoginForm\";\r\n\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst initAuth = {\r\n  account: undefined,\r\n  password: undefined,\r\n};\r\n\r\nexport function LoginCard() {\r\n  const [actionLoading, setActionLoading] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(undefined);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const login = (values) => {\r\n    dispatch(action.login(values, setActionLoading, setErrorMessage));\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <Box\r\n        sx={{\r\n          marginTop: 8,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          登入\r\n        </Typography>\r\n        <LoginForm\r\n          actionLoading={actionLoading}\r\n          errorMessage={errorMessage}\r\n          auth={initAuth}\r\n          login={login}\r\n        />\r\n      </Box>\r\n      <Copyright sx={{ mt: 8, mb: 4 }} />\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { LoginCard } from \"./LoginCard\";\r\n\r\nexport default function LoginPage() {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>RtSFTrack - 登入</title>\r\n      </Helmet>\r\n      <LoginCard />\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}